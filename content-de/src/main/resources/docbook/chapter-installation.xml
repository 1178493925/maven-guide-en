<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="installation">
  <title>Installieren und Ausführen von Maven</title>

  <para>Dieses Kapitel enthält detaillierte Anweisungen für die Installation
  von Maven auf einer Reihe von unterschiedlichen Plattformen. Statt ein
  bestimmtes Mass der Vertrautheit mit der Installation von Software und dem
  Einstellen von Umgebungsvariablen vorauszusetzen, haben wir uns entschieden,
  so detailliert wie möglich zu sein, um Probleme welche von unvollständigen
  Installation herrühren von vornherein zu minimieren. die einzige
  Voraussetzung welche angenommen wird ist die, einer bestehenden, geeigneten
  und vollständigen Java Umgebung, eines Java Development Kit (JDK). Sollten
  Sie nur Interesse an der Installation haben, so können Sie nach dem Lesen
  der Abschnitte "2.2 Herunterladen von Maven" sowie "2.3 Installation von
  Maven" zu den weiterführenden Kapiteln des Buches übergehen. Wenn Sie an
  einer detaillierten Beschreibung interessiert sind, so gibt Ihnen dieses
  Kapitel die entsprechenden Informationen sowie eine Erklärung der Bedeutung
  der Apache Software License, Version 2,0.</para>

  <section id="installation-sect-java">
    <title>Überprüfen der Java-Installation </title>

    <para>Obschon Maven auch auf Java 1.4 unterstützt ist, geht dieses Buch
    davon aus, dass sie mindestens auf Java 5 aufsetzen. Wählen Sie den
    neusten stabilen JDK welcher für Ihre Plattform erhältlich ist. Alle in
    diesem Buch aufgeführten Beispiele sind unter Java 5 oder Java 6
    lauffähig.</para>

    <para><screen><prompt moreinfo="none">% </prompt><command moreinfo="none">java -version</command>
java version "1.6.0_02"
Java(TM) SE Runtime Environment (build 1.6.0_02-b06)
Java HotSpot(TM) Client VM (build 1.6.0_02-b06, mixed mode, sharing)</screen></para>

    <para>Maven ist unter allen Java-kompatibel zertifiziert
    Entwicklungsumgebungen, sowie einigen weiteren, nicht-zertifizierten
    Implementierungen von Java lauffähig. Die Beispiele in diesem Buch wurden
    gegen die offizielle Java Development Kit Implementation wie diese von Sun
    Microsystems Webseite (http://java.sun.com) heruntergeladen werden kann,
    geschrieben und getestet. Sollten Sie mit einer Linux-Distribution
    arbeiten, müssen Sie eventuell die Java Entwicklungsumgebung selbst
    herunterladen und installieren. Bitte stellen Sie sicher, dass diese auch
    zum Einsatz kommt: durch Aufruf von "java -fullversion ". Nun, da Sun
    Microsystem den Quellcode von Java unter einer Open Source Lizenz
    offengelegt hat, tritt diesbezüglich hoffentlich schon bald eine Besserung
    ein und es werden auch auf puristisch Linux-Distributionen die originalen
    Sun JRE sowie JDKs installiert. Bis zu diesem Tag müssen Sie selbst Hand
    anlegen, Java herunterladen und installieren. </para>
  </section>

  <section id="installation-sect-maven-download">
    <title>Herunterladen von Maven</title>

    <para>Sie können Maven von der Apache Maven-Projekt-Website unter
    http://maven.apache.org/download.html herunterladen. </para>

    <para>Beim Herunterladen von Maven, wählen Sie die neuste Version von
    Apache Maven vom Website. Die aktuell neuste Version zur Zeit als dieses
    Buch geschrieben wurde war Maven 2.0.9. Sollten Sie die Apache Software
    Lizenz noch nicht kennen, so machen sie sich - vor dem Einsatz des
    Produktes - mit deren Bedingungen vertraut. Weitergehende Informationen
    diesbezüglich finden Sie in Abschnitt "2.8 Die Apache Software
    Lizenz".</para>
  </section>

  <section id="installation-sect-maven-install">
    <title>Installation von Maven </title>

    <para>Die Unterschiede zwischen den Betriebssystemen wie Mac OS X und
    Microsoft Windows sind gross, aber es gibt auch subtile Unterschiede
    zwischen den verschiedenen Versionen von Windows oder Varianten von Linux.
    Zum Glück ist der Prozess der Installation von Maven auf all diesen
    Betriebssystemen relativ einfach und schmerzlos. Die folgenden Abschnitte
    geben einen Überblick über die empfohlene Best-Practice der Installation
    von Maven unter einer Vielzahl von Betriebssystemen.</para>

    <section id="installation-sect-maven-osx">
      <title>Maven Installation unter Mac OSX </title>

      <para>Am Anfang benötigen Sie zunächst die Software, diese bekommen Sie
      unter: http://maven.apache.org/download.html. Laden Sie die aktuelle
      Version von Maven in einem für Sie passenden Format herunter. Wählen Sie
      einen geeigneten Platz als "Heimat" und entpacken Sie das Archiv dort.
      Wenn Sie zum Beispiel das Verzeichnis /usr/local/apache-maven-2.0.9
      gewählt haben, so macht es Sinn einen symbolischen Link zu erzeugen.
      Dies erleichtert die Arbeit und erspart die Anpassung von
      Umgebungsvariablen im Falle eines Upgrades der Version.</para>

      <screen>/usr/local % <command moreinfo="none">cd /usr/local
</command>/usr/local % <command moreinfo="none">ln -s apache-maven-2.0.9 maven
</command>/usr/local % <command>export M2_HOME=/usr/local/maven</command>
/usr/local % <command>export PATH=\${M2_HOME}/bin:\${PATH}</command></screen>

      <para>Ist Maven einmal installiert ist, müssen Sie noch ein paar
      Schritte unternehmen, damit Maven korrekt funktionieren kann. Zu aller
      erst sollten Sie das bin-Verzeichnis Ihrer Maven Distribution (in diesem
      Beispiel /usr/local/Apache-Maven/bin) in den Befehlspfad aufnehmen.
      Ausserdem sollten Sie noch die Umgebungsvariable M2_HOME auf das
      Maven-Top-Level-Verzeichnis setzen (in diesem Beispiel
      /usr/local/Maven).</para>

      <note>
        <para>Installations-Anweisungen sind die gleichen für OSX Tiger und
        OSX Leopard. Es wurde berichtet, dass Maven 2.0.6 mit einer
        Vorschau-Version von XCode ausgeliefert wird. Sollten Sie XCode
        installiert haben, führen Sie mvn von der Befehlszeile aus, und
        überprüfen Sie die Verfügbarkeit. XCode installiert Maven in
        /usr/share/Maven. Wir empfehlen die Installation der jüngsten Version
        von Maven 2.0.9, da hier eine Reihe von Bugfixes und Verbesserungen
        eingeflossen sind.</para>
      </note>

      <para>Um die Konfiguration beider Umgebungsvariablen bei jedem Start zu
      setzen, ist es notwendig diese in einem Skript abzulegen welches bei
      jedem Systemstart abgearbeitet wird. Fügen Sie daher die folgenden
      Zeilen der Datei .bash_login an:</para>

      <programlisting>export M2_HOME=/usr/local/maven
export PATH=\${M2_HOME}/bin:\${PATH}</programlisting>

      <para>Mit dem Anfügen dieser Zeilen wird Maven Ihrer Umgebung zugefügt,
      und Sie bekommen die Möglichkeit Maven von der Kommandozeile zu
      starten.</para>

      <note>
        <para>Diese Installationsanleitung geht davon aus, dass Sie unter der
        bash-Shell arbeiten.</para>
      </note>

      <section id="installation-sect-macports">
        <title>Maven Installation unter Mac OSX mit MacPorts</title>

        <para>Sollten Sie MacPorts einsetzen, so können Sie Maven
        installieren, indem Sie die folgenden Befehle auf der Kommandozeile
        eingeben:</para>

        <screen>$ <command>sudo port install maven2</command>
Password: ******
---&gt;  Fetching maven2
---&gt;  Attempting to fetch apache-maven-2.0.9-bin.tar.bz2 from http://www.apache.org/dist/maven/binaries
---&gt;  Verifying checksum(s) for maven2
---&gt;  Extracting maven2
---&gt;  Configuring maven2
---&gt;  Building maven2 with target all
---&gt;  Staging maven2 into destroot
---&gt;  Installing maven2 2.0.9_0
---&gt;  Activating maven2 2.0.9_0
---&gt;  Cleaning maven2
</screen>

        <para>Für weiterführende Informationen bezüglich der Maven 2
        Portierung verweisen wir auf Portfile. Bezüglich weiterführender
        Informationen zu MacPorts und wie dies zu installieren ist: MacPorts
        Projekt Seite (Engl.).</para>
      </section>
    </section>

    <section id="installation-sect-windows">
      <title>Maven Installation unter Microsoft Windows </title>

      <para>Die Installation von Maven unter Windows ist sehr ähnlich wie jene
      unter Mac OSX, die wichtigsten Unterschiede finden sich bezüglich des
      Installationsortes und der Festlegung der Umgebungsvariablen. Dieses
      Buch geht von einem Maven Installations-Verzeichnis von "C:\Program
      Files\Maven-2.0.9" aus, aber es wird keinen Unterschied machen, sollten
      Sie Maven in einem anderen Verzeichnis installieren, solange Sie die
      Umgebungsvariablen entsprechend gesetzt haben. Nach dem Entpacken des
      Maven Installationspaketes müssen Sie zwei Umgebungsvariablen - PATH und
      M2_HOME - setzen. Um dies zu bewerkstelligen, geben Sie auf der
      Kommandozeile folgende Befehlen ein: </para>

      <screen>C:\Users\tobrien &gt; <command>set M2_HOME=c:\Program Files\apache-maven-2.0.9</command>
C:\Users\tobrien &gt; <command>set PATH=%PATH%;%M2_HOME%\bin</command></screen>

      <para>Das Setzen der Umgebungsvariablen in der Kommando-Zeile erlaubt
      Ihnen die Ausführung von Maven während Ihrer aktuellen Sitzung und
      zwingt sie diese bei jedem Neustart erneut zu setzen. Sie sollten diese
      Variablen daher den Systemeinstellungen zufügen, öffnen Sie hierzu das
      "Systemeinstellungen" von dort "System" und wählen Sie "". <!--TODO: Document process of setting environment variables in the window control panel system dialog.--></para>
    </section>

    <section id="installation-sect-maven-linux">
      <title>Maven Installation unter Linux </title>

      <para>Zur Installation von Maven auf einer Linux-Maschine, folgen Sie
      der Vorgehensweise in Abschnitt 2.3.2: "Installation von Maven auf Mac
      OSX".</para>
    </section>

    <section id="installation-sect-bsd">
      <title>Maven Installation unter FreeBSD oder OpenBSD </title>

      <para>Zur Installation von Maven auf einem FreeBSD oder OpenBSD
      Maschine, folgen Sie der Vorgehensweise in Abschnitt 2.3.2:
      "Installation von Maven auf Mac OSX"</para>
    </section>
  </section>

  <section id="installation-sect-test-install">
    <title>Testen einer Maven Installation</title>

    <para>Ist Maven erst einmal installiert, können Sie die Version
    überprüfen, indem Sie mvn -v in der Befehlszeile eingeben. Bei einer
    korrekten Installation von Maven sollte eine Ausgabe wie folgt erscheinen:
    </para>

    <screen>$ <command>mvn -v</command>
Maven 2.0.9</screen>

    <para>Sollten sie diese Ausgabe erhalten, wissen Sie dass Maven verfügbar
    und bereit ist um eingesetzt zu werden. Wenn nicht, hat Ihr Betriebssystem
    den mvn Befehl nicht gefunden. Überprüfen Sie ob die
    PATH-Umgebungsvariable sowie M2_HOME (Gross/Kleinschreibung beachten!)
    richtig gesetzt sind.</para>
  </section>

  <section id="installation-sect-details">
    <title>Spezielle Installationshinweise </title>

    <para>Das herunter zu ladende Maven Paket hat eine Grösse von etwa 1,5 MiB
    [1], diese Schlankheit hat es erreicht, da der Kern von Maven mit dem Ziel
    entwickelt wurde, Plugins und Abhängigkeiten von einem Remote-Repository
    dynamisch und auf Abruf zuzuladen. Wenn Sie Anfangen mit Maven zu
    arbeiten, lädt Maven zunächst Plugins in ein lokales Repository. Dieses
    wird im Abschnitt 2.5.1 "Benutzerdefinierte Konfiguration und -Repository"
    beschrieben. Im Fall, dass Sie neugierig sind, lassen Sie uns einen Blick
    darauf werfen, was sich in Maven Installations Verzeichnis
    befindet.<footnote id="foot-installation-mebibytes">
        <para>Haben Sie je eine 200-GB-Festplatte gekauft, nur um
        herauszufinden, dass diese weniger als 200 GiB fasst, wenn Sie diese
        installiert haben? Computer verstehen Gibibytes, aber Einzelhändler
        verkaufen Produkte mit Gigabyte. MiB steht für die Mebibyte und ist
        definiert als 2^20 oder 1024^2. Diese binäre Präfix Standards sind von
        der IEEE, CIPM, und und IEC übernommen. Für weitere Informationen über
        Kibibytes, Mebibytes, Gibibytes und Tebibytes siehe auch
        http://en.wikipedia.org/wiki/Mebibyte. </para>
      </footnote></para>

    <screen>/usr/local/maven $ <command>ls -p1</command>
LICENSE.txt
NOTICE.txt
README.txt
bin/
boot/
conf/
lib/</screen>

    <para>Die Datei LICENSE.txt enthält die Software-Lizenz für Apache Maven.
    Diese Lizenz ist in einigen Details in Abschnitt 2.8 "Über die Apache
    Software Lizenz" beschrieben. NOTICE.txt enthält einige Hinweise zu
    Abhängigkeiten von Bibliotheken, von denen Maven abhängig ist. README.txt
    enthält Installationsanweisungen. Das Verzeichnis /bin enthält das
    "mvn"-Skript, mit welchem Maven aufgerufen wird. /boot enthält eine
    JAR-Datei (classworlds-1.1.jar), welche den Class-Loader unter welchem
    Maven ausgeführt wird bereitstellt . /conf enthält eine Datei
    settings.xml, diese wird eingesetzt um globale Einstellungen festzulegen
    um das Verhalten von Maven zu definieren und anzupassen. Sollten Sie Maven
    Ihren Gegebenheiten anpassen müssen, hat es sich herausgebildet, dass man
    die Einstellungen der settings-xml durch eine Datei settings.xml im
    Verzeichnis ~/.m2 übersteuert. /lib enthält eine einzige JAR-Datei
    (Maven-2.0.9-uber.jar), welche die Hauptimplementierung (Core) von Maven
    enthält. </para>

    <note>
      <para>Unless you are working in a shared Unix environment, you should
      avoid customizing the <filename>settings.xml</filename> in
      <filename>M2_HOME/conf</filename>. Altering the global
      <filename>settings.xml</filename> file in the Maven installation itself
      is usually unnecessary and it tends to complicate the upgrade procedure
      for Maven as you'll have to remember to copy the customized
      <filename>settings.xml</filename> from the old Maven installation to the
      new installation. If you need to customize
      <filename>settings.xml</filename>, you should be editing your own
      <filename>settings.xml</filename> in
      <filename>~/.m2/settings.xml</filename>.</para>
    </note>

    <section id="installation-sect-user">
      <title>Benutzerdefinierte Konfiguration und-Repository</title>

      <para>Sobald Sie beginnen sich mit Maven ausgiebig auseinander zu
      setzen, werden Sie feststellen, dass Maven einige lokale, Benutzer
      spezifischen Konfigurationsdateien und ein lokales Archiv in Ihrem
      Home-Verzeichnis angelegt hat. In ~/.m2 befinden sich:</para>

      <variablelist>
        <varlistentry>
          <term>~/.m2/settings.xml</term>

          <listitem>
            <para>Eine Datei mit der Benutzer spezifischen Konfiguration für
            Authentifizierung, Repositories und andere Informationen, um das
            Verhalten von Maven zu steuern.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>~/.m2/repository/</term>

          <listitem>
            <para>Dieses Verzeichnis enthält Ihr lokales Maven-Repository.
            Wenn Sie eine Abhängigkeit von einem Remote-Maven-Repository
            herunterladen, so wird diese in ihrem lokalen Repository
            zwischengespeichert. </para>
          </listitem>
        </varlistentry>
      </variablelist>

      <note>
        <para>Unter Unix (und OSX), bezeichnet die Tilde "~" Ihr
        Home-Verzeichnis (d.h. ~/bin bezieht sich auf /home/tobrien/bin).
        Unter Windows, werden wir uns ebenfalls mit ~ auf Ihr Home-Verzeichnis
        beziehen. Unter Windows XP ist Ihr Home-Verzeichnis "C:\Dokumente und
        Einstellungen\&lt;Benutzername&gt;", unter Windows Vista wird Ihr
        Home-Verzeichnis mit "C:\Users\&lt;Benutzername&gt;" bezeichnet. Im
        Folgenden bitten wir Sie entsprechend Ihres Systems den Pfad
        anzupassen. </para>
      </note>
    </section>

    <section id="installation-sect-upgrade">
      <title>Aktualisieren einer Maven-Installation </title>

      <para>So Sie unter Unix/OSX arbeiten und die Installation wie oben unter
      Abschnitt 2.3.2 "Installation von Maven auf Mac OSX" oder Abschnitt
      2.3.3 "Installation von Maven auf Linux" beschreiben ausgeführt haben,
      so ist es ein Kinderspiel eine Maven zu Aktualisieren: Installieren Sie
      einfach die neuere Version von Maven (/usr/local/maven-2.future) neben
      der bestehenden Version von Maven (/usr/local/maven-2.0.9). Ändern Sie
      dann symbolischen Link /usr/local/Maven von /usr/local/maven-2.0.9/ auf
      /usr/local/maven-2.future. Fertig! Da Ihre M2_HOME Variable bereits auf
      /usr/local/Maven zeigt, müssen keine weiteren Anpassungen ausgeführt
      werden. </para>

      <para>Unter Windows, entpacken Sie einfach die neue Version von Maven
      unter "C:\Program Files\Maven-2.future" und aktualisieren Sie Ihre
      M2_HOME Variable über die Systemsteuerungen.</para>

      <note>
        <para>Sollten Sie die globale Datei settings.xml von /M2_HOME/conf
        angepasst haben, so müssen Sie diese Änderungen in das
        /conf-Verzeichnis der neuen Installation Übertragen.</para>
      </note>
    </section>

    <section id="installation-sect-upgrade-detail">
      <title>Upgrade einer Maven-Installation von Maven 1.x auf Maven
      2.x</title>

      <para>Beim Upgrade von Maven 1 auf Maven 2 werden Sie eine ganz neue POM
      Struktur sowie ein neues Repository benutzen. Haben Sie bereits ein
      benutzerspezifisches Maven 1 Repository für massgeschneiderte Artefakte
      erstellt, so können Sie mit Hilfe des Nexus Repository Manager diese so
      darstellen, dass sie von Maven 2 Anwendungen benutzt werden können.
      Bezüglich weiterer Informationen zum Nexus Repository Manager verweisen
      wir auf Kapitel 16: Repository Manager. Zusätzlich zum Einsatz von
      Werkzeugen wie Nexus, können Sie Referenzen auf Repositorien so
      einstellen, dass diese das vorgängige Format unterstützen. Bezüglich
      weiterer Informationen zum Konfiguration einer Referenz auf ein Maven 1
      Repository siehe auch Abschnitt A.2.8: "Repositorien". Sollten Sie eine
      Anzahl bestehender Maven 1 Projekte unterhalten, interessieren Sie sich
      bestimmt für das Maven One Plugin. Das Plugin wurde entworfen, um
      Projekte von Maven 1 auf Maven 2 zu portieren. Ein bestehendes Maven 1
      Projekt können sie portieren in dem Sie das Goal one:convert wie folgt
      aufrufen:</para>

      <screen>$ cd my-project
$ mvn one:convert</screen>

      <para>one:convert wird eine Maven 1 project.xml Datei einlesen und in
      eine pom.xml-Datei konvertieren welches zu Maven 2 kompatibel ist.
      Sollten Sie allerdings ein Maven 1 Build Skript mittels Jelly angepasst
      haben, so müssen Sie andere Wege gehen. Während Maven 1 Jelly basierte
      Anpassungen favorisierte, ist der bevorzugte Weg der Anpassung von Maven
      2 Skripten mittels benutzerdefinierten Plugins, skriptbaren Plugins oder
      dem Maven Antrun Plugin. Das Wichtigste was es bei der Migration von
      Maven 1 auf Maven 2 zu beachten gilt ist, dass Maven 2 auf einem
      grundsätzlich verschiedenen Unterbau aufbaut. Maven 2 setzt auf
      Lebenszyklusphasen und definiert das Verhältnis zwischen Plugins auf
      eine andere Art und Weise. Sollten Sie eine derartige Migration
      vornehmen, so müssen Sie Zeit einplanen, um sich mit den Unterschieden
      der zwei Versionen vertraut machen. Obschon es nahe liegt sich mit der
      neuen POM Struktur auseinanderzusetzen, sollten Sie sich zunächst auf
      das Lebenszykluskonzept konzentrieren. Sobald Sie das
      Lebenszykluskonzept verstanden haben, steht Ihnen nichts mehr im Weg,
      Maven zur vollen Stärke einzusetzen.</para>
    </section>
  </section>

  <section id="installation-sect-uninstalling">
    <title>Maven Deinstallieren</title>

    <para>Die meisten Installationsanleitungen für Maven beinhalten das
    Entpacken des Maven Bündel in ein Verzeichnis und das Setzen einiger
    Umgebungsvariablen. Sollten Sie also Maven von Ihrem Arbeitsplatz
    entfernen müssen, so müssen Sie lediglich das Maven
    Installationsverzeichnis löschen und die Umgebungsvariablen entfernen. Sie
    sollten ebenfalls das Verzeichnis ~/.m2 entfernen, da dies Ihr lokales
    Repository enthält.</para>
  </section>

  <section id="installation-sect-getting-help">
    <title>Hilfe bekommen beim Arbeiten mit Maven</title>

    <para>Während dieses Buch das Ziel hat, ein umfassendes Nachschlagewerk zu
    sein, wird es Themen geben welche wir verpasst haben oder besondere
    Umstände und Situationen sowie Tipps, welche nicht abgedeckt werden. Der
    Kern von Maven ist sehr einfach, die eigentliche Arbeit geschieht in den
    Maven Plugins; und deren gibt es zu viele um alle in diesem Buch abdecken
    zu können. Sie werden zwangsläufig auf Schwierigkeiten stoßen und
    Eigenheiten finden, welche in diesem Buch nicht berücksichtigt wurden. In
    diesen Fällen empfehlen wir Ihnen die Suche nach Antworten an folgenden
    Orten:</para>

    <variablelist>
      <varlistentry>
        <term><ulink
        url="http://maven.apache.org">http://maven.apache.org</ulink></term>

        <listitem>
          <para>Dies sollte der erste Ausgangspunk einer jeden Suche sein. Der
          Maven-Website enthält eine Fülle von Informationen und
          Dokumentation. Jedes offizielle Plugin hat ein paar Seiten
          Dokumentation und es gibt eine Reihe von "Quick Start"-Dokumenten,
          die zusätzlich zum Inhalt dieses Buches hilfreich sein werden.
          Während die Maven Website eine Fülle von Informationen enthält, kann
          es aber auch frustrierend, verwirrend und überwältigend sein, dort
          zu suchen. Die Seite enthält ein spezielles Google-Suchfeld welches
          die wichtigsten Informationsquellen bezüglich Maven durchsucht.
          Diese Suchmaske liefert bessere Ergebnisse als eine generische
          Google-Suche.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Maven User Mailing List</term>

        <listitem>
          <para>Die Maven User Mailing List ist der Ort für Nutzer Fragen zu
          stellen. Bevor Sie sich mit einer Frage an die User Mailing List
          wenden, durchsuchen Sie bitte vorangegangene Diskussionen zum
          betreffenden Thema. Es zeugt von schlechtem Stil eine Frage stellen,
          die bereits zuvor gestellt wurde, ohne vorher zu prüfen, ob in den
          Archiven bereits eine Antwort schlummert. Es gibt eine Reihe von
          nützlichen Mailing-List Archiv Browsern um Ihnen die Arbeit zu
          erleichtern. Für unsere Recherchen hat sich Nabble als am
          nützlichsten erwiesen. Sie können die User Mailing List Archive hier
          finden: http://www.nabble.com/Maven---Users-f178.html. Eine
          Beschreibung, wie Sie der User Mailingliste beitreten können finden
          sie hier http://maven.apache.org/mail-lists.html.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><ulink
        url="http://www.sonatype.com">http://www.sonatype.com</ulink></term>

        <listitem>
          <para>Sonatype unterhält eine Online-Kopie dieses Buches und andere
          Tutorials im Zusammenhang mit Apache Maven. </para>
        </listitem>
      </varlistentry>
    </variablelist>

    <note>
      <para>Trotz der größten Bemühungen von einigen sehr engagierten Maven
      Mitwirkenden, ist die Maven Website ist schlecht organisiert und voller
      unvollständiger (und manchmal) irreführender Auszügen und
      Dokumentationen. In der Gemeinschaft der Maven Entwickler gibt es leider
      einen Mangel gemeinsamer Standards der Plugin-Dokumentation. Einige
      Plugins sind sehr gut dokumentiert, während andere nicht einmal die
      elementarsten Anweisungen für den Gebrauch ausweisen. Oft der
      erfolgversprechendste Ansatz die Suche nach einer Lösung in den Archiven
      des User Mailing List. Und wenn Sie wirklich helfen wollen unterbreiten
      Sie einen Patch der Maven Website (oder dieses Buchs).</para>
    </note>
  </section>

  <section id="installation-sect-help-plugin-install">
    <title>Das Maven Hilfe Plugin</title>

    <para>Im Laufe des Buches werden wir Maven-Plugins Einführen, sprechen von
    Maven Project Object Model (POM)-Dateien, Einstellungen und Profilen. Es
    werden Zeiten kommen, in denen Sie ein Werkzeug benötigen, um Ihnen dabei
    zu helfen, den Sinn einiger in Maven genutzter Modelle zu erkennen sowie
    die Zielsetzungen bestimmter Plugins nachzuvollziehen. Das Maven Hilfe
    Plugin ermöglicht Ihnen die in Maven aktiven Profile auszugeben, das
    tatsächlich aktive Projekt Objekt Modell (POM) anzusehen sowie die
    Attribute der Maven Plugins darzustellen.</para>

    <note>
      <para>Für einen konzeptionellen Überblick über das POM und Plug-Ins
      verweisen wir Sie auf Kapitel 3, Ein einfaches Maven-Projekt.</para>
    </note>

    <para>Die Hilfe Maven Plugin hat vier Goals. Die ersten drei Goals:
    -active-profiles, effective-pom, sowie effective-settings beschreiben je
    ein bestimmtes Projekt und müssen daher im Hauptverzeichnis des Projekts
    aufgerufen werden. Das letzte Goal - describe - ist etwas komplexer, es
    gibt Informationen über ein Plug-In oder dessen Zielsetzung aus.</para>

    <variablelist>
      <varlistentry>
        <term>help:active-profiles</term>

        <listitem>
          <para>Gibt die Profile (project, user, global) aus, welche für
          diesen Build aktiv sind</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>help:effective-pom</term>

        <listitem>
          <para>Zeigt das tatsächlich eintretende POM für den gegenwärtigen
          Build unter Berücksichtigung der aktiven Profile aus</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>help:effective-settings</term>

        <listitem>
          <para>Gibt die Einstellungen des Projekts wieder, unter
          Berücksichtigung von Profilerweiterungen sowie der Vererbung aus den
          globalen Einstellungen auf die Benutzer speziefischen
          Einstellungen</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>help:describe</term>

        <listitem>
          <para>Beschreibt die Attribute eines Plugins. Dieses Goal muss
          einzig nicht unter einem bestehendes Projekt Verzeichnis aufgerufen
          werden. Es muss mindestens die groupId und artifactId des Plugin
          welches Sie beschreiben wollen gegeben werden</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <section id="installation-sect-describing-plugin">
      <title>Beschreibung eines Maven Plugin </title>

      <para>Sobald Sie beginnen mit Maven zu arbeiten, werden Sie die meiste
      Zeit damit verbringen zu versuchen mehr Informationen zu Maven-Plugins
      zu bekommen: Wie funktionieren Plugins? Was sind die
      Konfigurations-Parameter? Was sind die Goals? Das Goal help:describe
      werden Sie regelmässig benutzen um an diese Informationen zu gelangen.
      Mit dem plugin-Parameter können Sie spezifizieren welches Plugin Sie
      untersuchen möchten. Hierzu geben sie entweder das Plugin-Prefix an
      (z.B. maven-help-plugin als help) oder die groupId:artifact[:version],
      wobei die Version optional ist. hier ein Beispiel, der folgende Befehl
      verwendet das Hilfe Plugin Goal describe um Informationen über das Maven
      Hilfe Plugin auszugeben. </para>

      <screen>$ <command>mvn help:describe -Dplugin=help</command>
...
Group Id:  org.apache.maven.plugins
Artifact Id: maven-help-plugin
Version:     2.0.1
Goal Prefix: help
Description:

The Maven Help plugin provides goals aimed at helping to make sense out of
    the build environment. It includes the ability to view the effective
    POM and settings files, after inheritance and active profiles
    have been applied, as well as a describe a particular plugin goal to give 
    usage information.
...
</screen>

      <para>Die Ausgabe des Goals describe mit dem Plugin-Parameter gibt die
      Koordinaten des Plugins aus, dessen Goal, Prefix und eine kurze
      Beschreibung. Obwohl diese Daten hilfreich sind, werden Sie in der Regel
      ausführlichere Informationen suchen. Um dies zu erreichen, führen Sie
      das Goal help:describe mit dem Parameter full aus, wie im folgenden
      beschrieben: </para>

      <screen>$ <command>mvn help:describe -Dplugin=help -Dfull</command>
...
Group Id:  org.apache.maven.plugins
Artifact Id: maven-help-plugin
Version:     2.0.1
Goal Prefix: help
Description:

The Maven Help plugin provides goals aimed at helping to make sense out of
    the build environment. It includes the ability to view the effective
    POM and settings files, after inheritance and active profiles
    have been applied, as well as a describe a particular plugin goal to 
    give usage information.

Mojos:

===============================================
Goal: 'active-profiles'
===============================================
Description:

Lists the profiles which are currently active for this build.

Implementation: org.apache.maven.plugins.help.ActiveProfilesMojo
Language: java

Parameters:
-----------------------------------------------

[0] Name: output
Type: java.io.File
Required: false
Directly editable: true
Description:

This is an optional parameter for a file destination for the output of 
this mojo...the listing of active profiles per project.

-----------------------------------------------

[1] Name: projects
Type: java.util.List
Required: true
Directly editable: false
Description:

This is the list of projects currently slated to be built by Maven.

-----------------------------------------------

This mojo doesn't have any component requirements.
===============================================

... removed the other goals ...
</screen>

      <para>Diese Option ist ideal um alle Goals eines Plugins zu finden,
      sowie deren Parameter. Aber manchmal ist dies weit mehr Informationen
      als notwendig. Um Informationen über ein einziges Goal zu erlangen,
      setzen Sie mit dem Plugin-Parameter auch den mojo-Parameter zu. Der
      folgende Aufruf listet alle Informationen über das Goal compile des
      Compiler-Plugins. </para>

      <screen>$ <command>mvn help:describe -Dplugin=compiler -Dmojo=compile -Dfull</command></screen>

      <note>
        <para>Was? Ein Mojo? In Maven, ein Plugin Goal ist bekannt als
        "Mojo".</para>
      </note>
    </section>
  </section>

  <section id="installation-sect-license">
    <title>Die Apache Software Lizenz</title>

    <para>Apache Maven ist unter der Apache Software Lizenz, Version 2.0
    freigegeben. Wenn Sie die Lizenz lesen möchten, lesen Sie diese Lizenz
    abgelegt in ${M2_HOME}/LICENSE oder lesen Sie diese auf der Webseiten der
    Open-Source-Initiative http://www.opensource.org/licenses/apache2.0.php.
    </para>

    <para>Es gibt eine gute Chance, dass Sie, wenn Sie dieses Buch lesen, kein
    Rechtsanwalt sind. Wenn Sie sich fragen, was die Apache Lizenz, Version
    2.0 bedeutet, dann hat die Apache Software Foundation hat eine sehr
    hilfreich "Häufig gestellte Fragen (FAQ)"- Seite bezüglich der Lizenz
    zusammengestellt. Sie finden diese unter
    http://www.apache.org/foundation/licence-FAQ.html. Da die FAQ in Englisch
    gefasst sind, hier nur eine Beispielhafte Übersetzung der Frage "Ich bin
    kein Jurist. Was bedeutet das alles ?"</para>

    <para><blockquote>
        <para><emphasis>Die Apache Lizenz, Version 2.0, Erlaubt Ihnen
        </emphasis></para>

        <itemizedlist>
          <listitem>
            <para>die Apache Software kostenlos herunterladen und zu
            verwenden. Ganz oder teilweise, für persönliche, Firmen-interne
            oder kommerzielle Nutzung einzusetzen.</para>
          </listitem>

          <listitem>
            <para>Apache Software in oder-Distributionen oder Pakete welche
            Sie erstellen einzusetzen</para>
          </listitem>
        </itemizedlist>

        <para><emphasis>Verbietet Ihnen:</emphasis></para>

        <itemizedlist>
          <listitem>
            <para>Apache Software oder davon abgeleitete Software ohne
            korrekte Angabe der Herkunft zu verbreiten;</para>
          </listitem>

          <listitem>
            <para>die Benutzung jeglicher Marken der Apache Software Stiftung
            in einer solchen Weise zu dass daraus abzuleiten ist, dass die
            Stiftung Ihr Produkt unterstützt</para>
          </listitem>

          <listitem>
            <para>die Benutzung jeglicher Marken der Apache Software Stiftung
            in einer solchen Weise zu dass daraus abzuleiten ist, dass Sie die
            Apache Software erschaffen haben.</para>
          </listitem>
        </itemizedlist>

        <para><emphasis>Zwingt Sie nicht</emphasis></para>

        <itemizedlist>
          <listitem>
            <para>die Source der Apache Software selbst, oder irgendwelcher
            davon abgeleiteten Produkte welche Sie daraus hergestellt haben
            einer Distribution oder einem Produkt welches Sie zusammengestellt
            haben beizulegen.</para>
          </listitem>

          <listitem>
            <para>Änderungen welche sie an der Software der Apache Software
            Stiftung angebracht haben dieser zurückgeben (Solcher Feedback
            wird ermutigt)</para>
          </listitem>
        </itemizedlist>
      </blockquote></para>
  </section>
</chapter>