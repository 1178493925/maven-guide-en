  ---
  Rendering Book Content to Website and DocBook Forms
  ---
  John Casey
  ---
  23 August 2007
  ---
  
Rendering Book Content to Website and DocBook Forms

*The Easy Way

  The easiest way to build the book project involves the use of the self-contained maven environment (repository "mirror" and settings) which are included in the book's project directory. To do this, make sure your Maven version of choice is 2.0.x (I used 2.0.8-SNAPSHOT, but 2.0.7 should work too), and run the following:
  
+---+
cd book
./book-mvn.sh clean site
+---+

  NOTE: I don't have the site-deploy or any of the packaging (default lifecycle, used for constructing associated assemblies) builds working yet, but it won't be hard to add these capabilities as we get into this further.

*The Old Way (non-standalone)

**Building the Plugin and Modules

  The book requires the use of the doxia-maven-plugin and its dependencies (namely, the doxia-book project and the latest doxia build from trunk of Subversion). The plugin itself, along with the doxia-book project, can be found in the Apache Maven sandbox:
  
+---+
svn co http://svn.apache.org/repos/asf/maven/sandbox/trunk/doxia doxia-sandbox
+---+

  The trunk of Doxia itself (which is also required, since a few patches to the docbook module were necessary) can also be found in the Apache Maven Subversion repository:
  
+---+
svn co http://svn.apache.org/repos/asf/maven/doxia/trunk/doxia doxia-trunk
+---+

  Once you have both of these locations checked out, build each of them:
  
+---+
cd doxia-trunk
mvn clean install

cd doxia-sandbox/doxia-book
mvn clean install

cd doxia-sandbox/doxia-maven-plugin
mvn clean install
+---+

  NOTE: Some or all of these pieces may already exist out on various Maven repositories that you have access to. You may want to try the actual book build first, just to see what's missing.
  
**Building the Book

  Once you have all of the latest Doxia modules and the doxia-maven-plugin ready to go, rendering the book to website and docbook is a simple process of calling Maven with the site lifecycle phase:
  
+---+
cd book
mvn clean site
+---+

  Once this completes, the rendered website should exist under target/site. The DocBook output should exist under target/generated-site/doc-book/maven-user-guide.
  
  If you want to actually deploy the book content out to the Sonatype website, simply call the site-deploy lifecycle phase instead of the site phase:
  
+---+
cd book
mvn clean site-deploy
+---+

  NOTE: You may need to setup a Maven settings.xml configuration file with the appropriate credentials to allow you to actually copy the files up to the webserver. See the Errata section below for more information.
  
**Errata

***Configuring Maven for <<<site-deploy>>>

  The site-deploy lifecycle phase will require your SSH credentials to access the www.sonatype.com server. To configure this, add the following section to your $HOME/.m2/settings.xml file:

+---+
<settings>
  [...]
  
  <servers>
    [...]
    
    <server>
      <id>sonatype-site</id>
      <username>YOUR-USERNAME</username>
      <password>YOUR-PASSWORD</password>
    </server>
  </servers>
  
  [...]
</settings>
+---+

  Alternatively, if you use public-key authentication for SSH, you can add the following:

+---+
<settings>
  [...]
  
  <servers>
    [...]
    
    <server>
      <id>sonatype-site</id>
      <privateKey>/path/to/private/key/usually/user-home/.ssh/id_dsa</username>
      <passphrase>YOUR-KEYS-PASSPHRASE</passphrase>
    </server>
  </servers>
  
  [...]
</settings>
+---+
  
